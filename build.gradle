def pomConfig = {
    organization {
        name 'Off-Beat Mind'
        url 'https://github.com/humanejava/humane'
    }
    scm {
        url 'https://github.com/humanejava/humane'
        connection 'scm:git:https://github.com/humanejava/humane.git'
        developerConnection 'scm:git:git@https://github.com/humanejava/humane.git'
    }
    licenses {
        license {
            name 'GNU Lesser General Public License'
            url 'https://www.gnu.org/licenses/lgpl-3.0.html'
            distribution 'repo'
            
        }
        license {
            name 'Apachee'
            url 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'humanejava'
            name 'Off-Beat Mind'
            organization 'Off-Beat Mind'
        }
    }
}

allprojects {
  repositories {
     mavenCentral()
  }
  
  group = 'com.offbeatmind.humane'
  version = '0.1'
  
  apply plugin: 'maven-publish'
  
  plugins.withType(JavaPlugin) {
      publishing {
          publications {
              maven(MavenPublication) {
                  artifactId = 'humane-' + project.path.substring(1).replace(':', '-');
                  pom.withXml {
                      def dependenciesNode = asNode().getAt("dependencies")[0]
                      if (dependenciesNode == null) {
                          dependenciesNode = asNode().appendNode('dependencies')
                      }
                      
                      configurations.implementation.allDependencies.each {
                          def dependencyNode = dependenciesNode.appendNode('dependency')
                          dependencyNode.appendNode('groupId', it.group)
                          dependencyNode.appendNode('artifactId', it.name)
                          dependencyNode.appendNode('version', it.version)
                          dependencyNode.appendNode('scope', 'compile')
                      }
                      
                      configurations.runtimeOnly.allDependencies.each {
                          def dependencyNode = dependenciesNode.appendNode('dependency')
                          dependencyNode.appendNode('groupId', it.group)
                          dependencyNode.appendNode('artifactId', it.name)
                          dependencyNode.appendNode('version', it.version)
                          dependencyNode.appendNode('scope', 'runtime')
                      }
                          
                      asNode().children().last() + pomConfig 
                  }
              }
          }
      }
  }
}