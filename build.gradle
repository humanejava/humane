plugins {
    id 'com.palantir.git-version' version '0.11.0'
}

ext {
    detailedVersion = versionDetails(prefix: 'version-');
    logger.lifecycle '--------------------------------------------------------'
    logger.lifecycle 'Version from tag:    ' + detailedVersion.lastTag
    logger.lifecycle 'Git branch name:     ' + detailedVersion.branchName
    logger.lifecycle 'Git commit distance: ' + detailedVersion.commitDistance
    logger.lifecycle 'Clean (no changes)?: ' + detailedVersion.isClean()
    logger.lifecycle '--------------------------------------------------------'

    versionBase = "${detailedVersion.lastTag ?: '0.0'}.${detailedVersion.commitDistance}"
    if (!detailedVersion.isClean()) versionBase = versionBase + '+'
    
    
    versionBranchInfix = detailedVersion.branchName ?: 'localdev';
    if ('master'.equals(versionBranchInfix)) {
        versionBranchInfix = ''
    } else {
        versionBranchInfix = '.' + versionBranchInfix;
    }

    String travisBuildNumber = System.getenv('TRAVIS_BUILD_NUMBER')
   
    if (travisBuildNumber != null) {
        snapshotBuild = false
        buildNumber = travisBuildNumber
        buildNumberInfix = ".${buildNumber}"
        snapshotSuffix = ''
    } else {
        snapshotBuild = true
        buildNumber = null
        buildNumberInfix = ''
        snapshotSuffix = '-SNAPSHOT'
    }

    logger.lifecycle 'Version base:        ' + versionBase
    logger.lifecycle 'Version branch id:   ' + versionBranchInfix
    logger.lifecycle 'Build number infix:  ' + buildNumberInfix
    logger.lifecycle 'Snapshot suffix:     ' + snapshotSuffix
    logger.lifecycle '--------------------------------------------------------'
}

version = versionBase + buildNumberInfix + versionBranchInfix + snapshotSuffix;
logger.lifecycle 'Complete version:    ' + version
logger.lifecycle '--------------------------------------------------------'

def pomConfig = {
    organization {
        name 'Off-Beat Mind'
        url 'https://github.com/humanejava/humane'
    }
    scm {
        url 'https://github.com/humanejava/humane'
        connection 'scm:git:https://github.com/humanejava/humane.git'
        developerConnection 'scm:git:git@https://github.com/humanejava/humane.git'
    }
    licenses {
        license {
            name 'GNU Lesser General Public License'
            url 'https://www.gnu.org/licenses/lgpl-3.0.html'
            distribution 'repo'
            
        }
        license {
            name 'Apachee'
            url 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'humanejava'
            name 'Off-Beat Mind'
            organization 'Off-Beat Mind'
        }
    }
}

allprojects {
    repositories {
       mavenCentral()
    }

    group = 'com.offbeatmind.humane'
    version = rootProject.version

    apply plugin: 'signing'  
    apply plugin: 'maven-publish'
    
    ext."signing.keyId" = 'BC9180CB'
    ext."signing.password" = System.getenv('RSA_PASSPHRASE')
    ext."signing.secretKeyRingFile" = rootProject.file('humane.gpg')
    
    plugins.withType(JavaPlugin) {
        task sourcesJar(type: Jar) {
            from sourceSets.main.allJava
            archiveClassifier = 'sources'
        }
        
        task javadocJar(type: Jar) {
            from javadoc
            archiveClassifier = 'javadoc'
        }
        
        jar {
            into("META-INF/maven/$project.group/$project.name") {
                from { generatePomFileForMavenPublication }
                rename ".*", "pom.xml"
            }
        }
        
        publishing {
            repositories {
                maven {
                    credentials {
                        username System.getenv('NEXUS_USER')
                        password System.getenv('NEXUS_PASSWORD')
                    }
                    if (project.version.endsWith('-SNAPSHOT')) {
                        url 'https://oss.sonatype.org/content/repositories/snapshots'
                    } else {
                        url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                    }
                }
            }
            publications {
                maven(MavenPublication) {
                    artifactId = 'humane-' + project.path.substring(1).replace(':', '-');
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                    pom.withXml {                       
                        asNode().children().last() + pomConfig 
                    }
                }
            }

            signing {
                sign publishing.publications.maven
            }
        }
    }
}